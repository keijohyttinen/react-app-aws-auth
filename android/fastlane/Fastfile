# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.59.0"

default_platform :android

platform :android do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
  end

  desc "Returns a default changelog."
  lane :default_changelog do
    changelog = changelog_from_git_commits(
        between: [ENV['GIT_PREVIOUS_SUCCESSFUL_COMMIT'] || "HEAD^^^^^", "HEAD"],
        pretty: "%h %cn: %s\r\n"
    )
    # HAX: strip emoji from changelog
    changelog = changelog.sub(/[\u{1F300}-\u{1F6FF}]/, '')
    Actions.lane_context[SharedValues::FL_CHANGELOG] = changelog
    puts changelog
    changelog
  end

  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Build & Upload a developer build to Hockey."
  lane :dev do
    sh "cd .. && npm run-script bundle-android"
    sh "cd .. && npm run-script build-android"
    sh "fastlane deploydev"
  end

  desc "Upload a developer build to Hockey."
  lane :deploydev do
    hockey(
      api_token: "<Replace this with your token>",
      apk: "app/build/outputs/apk/app-debug.apk",
      notes: default_changelog,
      notify: '2', # Notify all testers
      status: '2', # Make available for download
      release_type: '0' # 'beta' release type
    )
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "assembleRelease")
    hockey(
      #apk: "android/app/build/outputs/apk/app-debug.apk",
      notes: default_changelog,
      notify: '2', # Notify all testers
      status: '2', # Make available for download
      release_type: '2' # 'alpha' release type
    )
    #crashlytics

    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "assembleRelease")
    supply
    #supply(
    #  track: "alpha",
    #  apk: "#{lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH]}"
    #)
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used. No personal data is recorded.
# Learn more at https://github.com/fastlane/fastlane#metrics
